Version: 2.0

#########################
# Alternatives Section
#

Alternatives: &alternatives
# Here, we list all the alternatives, together with their attributes. 
# We can use these attributes later in the file when defining 
# preferenceFunctions. The attributes can be quantitative or 
# qualitative.
  HB PC 1030:
    pojemnosc: 30
    waga_w_kg: 4.8
    cena: 269
    kolor: zielono-szary
    utrzymywanie_temperatury_do_st_c: 18
  Ezetil E32M:
    pojemnosc: 29
    waga_w_kg: 4.1
    cena: 379
    kolor: szaro-niebieski
    utrzymywanie_temperatury_do_st_c: 17
  Ezetil E26M:
    pojemnosc: 24
    waga_w_kg: 3.9
    cena: 349
    kolor: szaro-niebieski
    utrzymywanie_temperatury_do_st_c: 17
  T30 Electra:
    pojemnosc: 27
    waga_w_kg: 4.4
    cena: 299
    kolor: szary
    utrzymywanie_temperatury_do_st_c: 14
  Ezetil E28M:
    pojemnosc: 26
    waga_w_kg: 5.5
    cena: 299
    kolor: szaro-czerwony
    utrzymywanie_temperatury_do_st_c: 16
  Ezetil C-C E24:
    pojemnosc: 22
    waga_w_kg: 3.9
    cena: 160
    kolor: czerwono-bialy
    utrzymywanie_temperatury_do_st_c: 14
  Ezetil E40M:
    pojemnosc: 37
    waga_w_kg: 7.1
    cena: 499
    kolor: bialo-niebieski
    utrzymywanie_temperatury_do_st_c: 17
  T25 Electra:
    pojemnosc: 22
    waga_w_kg: 3.7
    cena: 259
    kolor: szary
    utrzymywanie_temperatury_do_st_c: 17
  Ezetil EZC45:
    pojemnosc: 42
    waga_w_kg: 19.8
    cena: 2699
    kolor: szary
    utrzymywanie_temperatury_do_st_c: 14
  Ezetil COOLCAN 10/12:
    pojemnosc: 10
    waga_w_kg: 11.5
    cena: 419
    kolor: czerwono-bialy
    utrzymywanie_temperatury_do_st_c: 20
  Sencor SCM 4700BL:
    pojemnosc: 7
    waga_w_kg: 2.4
    cena: 269
    kolor: niebieski
    utrzymywanie_temperatury_do_st_c: 20
  Gio`Style Shiver 40:
    pojemnosc: 41
    waga_w_kg: 7.52
    cena: 489
    kolor: szary
    utrzymywanie_temperatury_do_st_c: 18
  Gio`Style Bravo 25:
    pojemnosc: 21
    waga_w_kg: 2.83
    cena: 189
    kolor: niebiesko-zolty
    utrzymywanie_temperatury_do_st_c: 18
  Sencor SCM 2025:
    pojemnosc: 20
    waga_w_kg: 4.1
    cena: 369
    kolor: szaro-niebieski
    utrzymywanie_temperatury_do_st_c: 20
  Gio`Style GS3+ 30:
    pojemnosc: 30
    waga_w_kg: 4.7
    cena: 319
    kolor: srebrny
    utrzymywanie_temperatury_do_st_c: 18
  Sencor SCM 3033RD:
    pojemnosc: 32
    waga_w_kg: 2.9
    cena: 399
    kolor: pomaranczowy
    utrzymywanie_temperatury_do_st_c: 15
  HB PC 1010:
    pojemnosc: 24
    waga_w_kg: 5
    cena: 200
    kolor: bialo-niebieski
    utrzymywanie_temperatury_do_st_c: 15
  Sencor SCM 1025:
    pojemnosc: 20
    waga_w_kg: 4.3
    cena: 269
    kolor: szaro-niebieski
    utrzymywanie_temperatury_do_st_c: 20
  Ardes AR5I04:
    pojemnosc: 4
    waga_w_kg: 2.3
    cena: 159
    kolor: czarny
    utrzymywanie_temperatury_do_st_c: 19
  Sencor SCM 3033BL:
    pojemnosc: 32
    waga_w_kg: 2.9
    cena: 419
    kolor: niebieski
    utrzymywanie_temperatury_do_st_c: 15

#
# End of Alternatives Section
#####################################

#####################################
# Goal Section
#


Goal:
# The goal spans a tree of criteria and the alternatives
  name: Zakup lodowki
  description: >
    This is a classic single decision maker problem. It models
    the situation facing by a family that wants to buy a new fridge.
  author: Jedrzej Cebrat
  decision-makers:
    - Ojciec: 0.4
    - Matka: 2/5
    - Dziecko: 0.2
  preferences:
    # preferences are typically defined pairwise
    # 1 means: A is equal to B
    # 9 means: A is highly preferrable to B
    # 1/9 means: B is highly preferrable to A
    Ojciec:
      pairwise:
        - [Wydajnosc, Jakosc, 3]
        - [Wydajnosc, Styl, 9]
        - [Wydajnosc, Cena, 5]
        - [Jakosc, Styl, 7]
        - [Jakosc, Cena, 1]
        - [Styl, Cena, 1/9]
    Matka:
      pairwise:
        - [Wydajnosc, Jakosc, 2]
        - [Wydajnosc, Styl, 6]
        - [Wydajnosc, Cena, 1/3]
        - [Jakosc, Styl, 4]
        - [Jakosc, Cena, 1/6]
        - [Styl, Cena, 1/7]
    Dziecko:
      pairwise:
        - [Wydajnosc, Jakosc, 1/2]
        - [Wydajnosc, Styl, 1/6]
        - [Wydajnosc, Cena, 1/2]
        - [Jakosc, Styl, 1/6]
        - [Jakosc, Cena, 1]
        - [Styl, Cena, 6]
  children: 
    Wydajnosc: 
      preferences:
        Ojciec:
            # Komentarz - metoda s³uzaca do porownywania w parach tego, jak niska temperatura w stopniach Celsjusza mo¿e byc utrzymywana
            pairwiseFunction: 
                function(a1, a2) min(9, max(1/9, a2$utrzymywanie_temperatury_do_st_c/a1$utrzymywanie_temperatury_do_st_c))
        Matka:
            # Komentarz - ocena wydajnosci na podstawie tego, jak niska temperatura w stopniach Celsjusza mo¿e byc utrzymywana
            scoreFunction:
                function(a) -a$utrzymywanie_temperatury_do_st_c
        Dziecko:
            # Komentarz - ocena wydajnosci na podstawie tego, jak niska temperatura w stopniach Celsjusza mo¿e byc utrzymywana
            scoreFunction:
                function(a) -a$utrzymywanie_temperatury_do_st_c
      children: *alternatives
    Jakosc: 
      preferences:
        Ojciec:
          # Komentarz - ocena jakosci na podstawie pojemnosci wyznaczonej w litrach
          scoreFunction:
              function(a) a$pojemnosc
        Matka:
          # Komentarz - metoda porownywania pojemnosci (l) w parach
          pairwiseFunction: 
              function(a1, a2) min(9, max(1/9, a2$pojemnosc/a1$pojemnosc))
        Dziecko:
          # Komentarz - ocena jakosci na podstawie pojemnosci wyznaczonej w litrach
          scoreFunction:
              function(a) a$pojemnosc
      children: *alternatives
    Styl: 
      preferences:
        Ojciec:
          # Komentarz - ocena stylu na podstawie koloru; brane kolory pod uwage: zielono-szary, szaro-niebieski, szary, szaro-czerwony, srebrny, czarny (jakiekolwiek inne kolory oceniamy na 4)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor == "zielono-szary") wynik_stylu_dla_a1 <- 1
              else if (a1$kolor == "szaro-niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor == "szary") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor == "szaro-czerwony") wynik_stylu_dla_a1 <- 5
              else if (a1$kolor == "srebrny") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor == "czarny") wynik_stylu_dla_a1 <- 3
              else wynik_stylu_dla_a1 <- 4
              if (a2$kolor == "zielono-szary") wynik_stylu_dla_a2 <- 1
              else if (a2$kolor == "szaro-niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor == "szary") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor == "szaro-czerwony") wynik_stylu_dla_a2 <- 5
              else if (a2$kolor == "srebrny") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor == "czarny") wynik_stylu_dla_a2 <- 3
              else wynik_stylu_dla_a2 <- 4
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
        Matka:
          # Komentarz - ocena stylu na podstawie koloru; brane kolory pod uwage: zielono-szary, szaro-niebieski, szary, szaro-czerwony, czerwono-bialy, bialo-niebieski, niebieski, niebiesko-zolty, srebrny, pomaranczowy, czarny (jakiekolwiek inne kolory oceniamy na 5)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor == "zielono-szary") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor == "szaro-niebieski") wynik_stylu_dla_a1 <- 1
              else if (a1$kolor == "szary") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor == "szaro-czerwony") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor == "czerwono-bialy") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor == "bialo-niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor == "niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor == "niebiesko-zolty") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor == "srebrny") wynik_stylu_dla_a1 <- 4
              else if (a1$kolor == "pomaranczowy") wynik_stylu_dla_a1 <- 9
              else if (a1$kolor == "czarny") wynik_stylu_dla_a1 <- 3
              else wynik_stylu_dla_a1 <- 5
              if (a2$kolor == "zielono-szary") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor == "szaro-niebieski") wynik_stylu_dla_a2 <- 1
              else if (a2$kolor == "szary") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor == "szaro-czerwony") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor == "czerwono-bialy") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor == "bialo-niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor == "niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor == "niebiesko-zolty") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor == "srebrny") wynik_stylu_dla_a2 <- 4
              else if (a2$kolor == "pomaranczowy") wynik_stylu_dla_a2 <- 9
              else if (a2$kolor == "czarny") wynik_stylu_dla_a2 <- 3
              else wynik_stylu_dla_a2 <- 5
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
        Dziecko:
          # Komentarz - ocena stylu na podstawie koloru; brane kolory pod uwage: zielono-szary, szaro-niebieski, szaro-czerwony, czerwono-bialy, bialo-niebieski, niebieski, niebiesko-zolty, srebrny, pomaranczowy (jakiekolwiek inne kolory oceniamy na 1)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor == "zielono-szary") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor == "szaro-niebieski") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor == "szaro-czerwony") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor == "czerwono-bialy") wynik_stylu_dla_a1 <- 5
              else if (a1$kolor == "bialo-niebieski") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor == "niebieski") wynik_stylu_dla_a1 <- 9
              else if (a1$kolor == "niebiesko-zolty") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor == "srebrny") wynik_stylu_dla_a1 <- 4
              else if (a1$kolor == "pomaranczowy") wynik_stylu_dla_a1 <- 6
              else wynik_stylu_dla_a1 <- 1
              if (a2$kolor == "zielono-szary") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor == "szaro-niebieski") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor == "szaro-czerwony") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor == "czerwono-bialy") wynik_stylu_dla_a2 <- 5
              else if (a2$kolor == "bialo-niebieski") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor == "niebieski") wynik_stylu_dla_a2 <- 9
              else if (a2$kolor == "niebiesko-zolty") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor == "srebrny") wynik_stylu_dla_a2 <- 4
              else if (a2$kolor == "pomaranczowy") wynik_stylu_dla_a2 <- 6
              else wynik_stylu_dla_a2 <- 1
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
      children: *alternatives
    Cena: 
      preferences:
        Ojciec:
          # Komentarz - ocena ceny
          scoreFunction:
              function(a) -a$cena
        Matka:
          # Komentarz - ocena ceny
          scoreFunction:
              function(a) -a$cena
        Dziecko:
          # Komentarz - metoda s³uzaca do porownywania w parach cen lodowek
          pairwiseFunction: 
              function(a1, a2) min(9, max(1/9, a2$cena/a1$cena))
      children: *alternatives

#
# End of Goal Section
#####################################